#%%
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
import os

# %%

path = 'output/bf_rc1'
ext = os.path.split(path)[-1]
df = pd.read_pickle(os.path.join(path, 'bf.pkl'))
# df = df[df.setup == 'PM']
df = df.apply(pd.Series.explode).reset_index().apply(
    pd.Series.explode).reset_index()

df = df[df.setup == 'PM']
df = df[df.dn > 0]
df_t = df[df.dn == 0.002]

# %%
for parameter in ["transmittance", "retardation"]:
    for setup in df.setup.unique():
        print(setup)
        f = plt.figure()
        if parameter == 'transmittance':
            df_ = df_t
        else:
            df_ = df
        ax = sns.boxplot(x="dn",
                         y=parameter,
                         data=df_[(((df_.dn % 0.0010 == 0) & (df_.dn < 0)) |
                                   ((df_.dn % 0.0020 == 0) & (df_.dn > 0))) &
                                  (df_.setup == setup)],
                         hue="radius",
                         palette=sns.color_palette())
        # ax.ticklabel_format(scilimits=(5,5))
        ax.set_xticklabels(ax.get_xticklabels(), rotation=30)
        if parameter == "retardation":
            ax.set(ylim=(0, 1.05))
        f.set_size_inches(15, 10)
        # plt.ticklabel_format(style='sci', axis='x', scilimits=(5,5), useMathText=True)
        plt.savefig(os.path.join(path, f'{ext}_{parameter}_{setup}.pdf'),
                    dpi=300)
        for species in df_.species.unique():
            print(species)
            f = plt.figure()
            ax = sns.boxplot(
                x="dn",
                y=parameter,
                data=df_[(((df_.dn % 0.0010 == 0) & (df_.dn < 0)) |
                          ((df_.dn % 0.0020 == 0) & (df_.dn > 0))) &
                         (df_.species == species) & (df_.setup == setup)],
                hue="radius",
                palette=sns.color_palette())
            # ax.ticklabel_format(scilimits=(5,5))
            ax.set_xticklabels(ax.get_xticklabels(), rotation=30)
            if parameter == "retardation":
                ax.set(ylim=(0, 1.05))
            f.set_size_inches(15, 10)
            # plt.ticklabel_format(style='sci', axis='x', scilimits=(5,5), useMathText=True)
            plt.savefig(os.path.join(
                path, f"{ext}_{parameter}_{setup}_{species}.pdf"),
                        dpi=300)

# %%
