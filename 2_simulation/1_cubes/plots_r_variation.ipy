#%% [markdown]
# previe plot of changes in radii to determan if the radius changes the signal by looking at the resulting orientation distribution changes of acc(GT,GT), acc(GT,SIM), acc(SIM,SIM)

#%%
# from IPython import get_ipython

# get_ipython().run_line_magic('matplotlib', 'inline')
# from jupyterthemes import jtplot

# jtplot.style(theme="onedork", context="notebook", ticks=True, grid=True)
#%%
import h5py
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import os
import seaborn as sns

import fastpli.tools

#%%

THESIS = os.path.join(os.path.realpath(__file__).split('/thesis/')[0], 'thesis')
FILE_NAME = os.path.abspath(__file__)
FILE_PATH = os.path.dirname(FILE_NAME)
FILE_BASE = os.path.basename(FILE_NAME)
FILE_NAME = os.path.splitext(FILE_BASE)[0]

DATASET = 'cube_2pop_135_rc1'

df_acc = pd.read_pickle(
    os.path.join(FILE_PATH, "output", DATASET,
                 "analysis/cube_2pop_simulation_accs.pkl"))
print("df_acc:", df_acc.columns)

#%%

for model in ["p", "r"]:
    fig, axs = plt.subplots(3, figsize=(10, 16))
    microscope = "PM"
    species = "Vervet"
    # model = "r"
    # f0_inc = 0.00
    # f1_rot = 0.00

    # omega = 30

    df_ = df_acc.query('microscope == @microscope & species == @species & ' +
                       'model == @model & radius0 == 0.5')

    # df_ = df_acc.query('microscope == @microscope & species == @species & ' +
    #                    'model == @model & omega == @omega & ' +
    #                    'f0_inc == @f0_inc & f1_rot == @f1_rot')

    # for col in df_.columns:
    #     if len(df_[col].unique()) == 1:
    #         df_.drop(col, inplace=True, axis=1)

    # print(df_)

    sns.lineplot(data=df_,
                 x="radius1",
                 y="accGtGt",
                 hue="psi",
                 style="omega",
                 palette="mako_r",
                 markers=True,
                 ax=axs[0])
    sns.lineplot(data=df_,
                 x="radius1",
                 y="accGtSim",
                 hue="psi",
                 style="omega",
                 palette="mako_r",
                 markers=True,
                 ax=axs[1],
                 legend=False)
    sns.lineplot(data=df_,
                 x="radius1",
                 y="accSimSim",
                 hue="psi",
                 style="omega",
                 palette="mako_r",
                 markers=True,
                 ax=axs[2],
                 legend=False)
    plt.tight_layout()
    plt.savefig(
        os.path.join(
            FILE_PATH, "output",
            f"{DATASET}_radius_acc_compare_{species}_{microscope}_{model}.pdf"))
# %%
