#%%
from IPython import get_ipython
get_ipython().run_line_magic('matplotlib', 'inline')
from jupyterthemes import jtplot
jtplot.style(theme="onedork", context="notebook", ticks=True, grid=True)
#%%
import h5py
import numpy as np
import matplotlib.pyplot as plt
import fastpli.tools
import pandas as pd

#%% Absorption
gain = 0.1175
# gain = 3
# lambda x: np.round(np.random.normal(x, np.sqrt(gain * x))).astype(np.uint16)

x = np.array([115, 574, 1608])
y = np.divide(np.sqrt(gain * x), x)
for i, j in zip(x, y):
    print(f"{i}, {j}")

x = np.logspace(0, 11, 21, base=2)
y = np.divide(np.sqrt(gain * x), x)

plt.plot(x, y)
plt.xscale("log")
plt.yscale("log")


#%%
def _calc_intensity(phi, alpha, t_rel, theta, phii):
    num_rotations = 9
    number_tilts = 5
    rotation_angles = np.linspace(0, np.pi, num_rotations + 1)[:-1]

    # tilt orientation
    u = np.array([
        np.cos(phii) * np.sin(theta),
        np.sin(phii) * np.sin(theta),
        np.cos(theta)
    ])

    # fiber orientation
    v = np.array([
        np.cos(phi) * np.cos(alpha),
        np.sin(phi) * np.cos(alpha),
        np.sin(alpha)
    ])

    # tilted fiber orientation
    rot = fastpli.tools.rotation.a_on_b([0, 0, 1], v)
    v = np.dot(rot, u)
    phi_v = np.arctan2(v[1], v[0])
    alpha_v = np.arcsin(v[2])

    # print(np.rad2deg(phi), np.rad2deg(alpha), np.rad2deg(phi_v),
    #       np.rad2deg(alpha_v))
    I = np.sin(np.pi / 2 * t_rel * np.cos(alpha_v)**2) * np.sin(
        2 * (rotation_angles - phi_v))
    return I


#%%
microscope = "PM"
species = "Vervet"
model = "r"
psi = "0.30"
omega = "30.00"
r = "0.50"
incl = "30.00"
rot = "0.00"

h5f = h5py.File(
    f"output/sim_120_new/0.125/cube_2pop_psi_{psi}_omega_{omega}_r_{r}_v0_120_.solved_vs_0.1250_inc_{incl}_rot_{rot}.h5",
    "r")
h5f_sub = h5f[f"/{microscope}/{species}/{model}/"]

data = [h5f_sub[f'simulation/optic/{i}'][...] for i in range(5)]
data = np.array(data)
data = data[:, data.shape[1] // 2, data.shape[2] // 2, :].T
data = (data / np.mean(data)) - 1

# #%%
# R
rofl_direction = h5f_sub['analysis/rofl/direction'][...]
rofl_inclination = h5f_sub['analysis/rofl/inclination'][...]
rofl_trel = h5f_sub['analysis/rofl/t_rel'][...]

fit_data = np.empty((5, rofl_direction.shape[0], rofl_direction.shape[1], 9))

theta = 5.5 if microscope == "LAP" else 3.9

phis = [0, 0, 90, 180, 270]
for t, phi in enumerate(phis):
    for i in range(fit_data.shape[1]):
        for j in range(fit_data.shape[2]):
            fit_data[t, i, j, :] = _calc_intensity(rofl_direction[i, j],
                                                   rofl_inclination[i, j],
                                                   rofl_trel[i, j],
                                                   np.deg2rad(theta),
                                                   np.deg2rad(phi))

fit_data = fit_data[:, fit_data.shape[1] // 2, fit_data.shape[2] // 2, :].T

# #%%
# plot
plt.plot(data)
plt.plot(fit_data)

# %%

df = pd.DataFrame()
df['rho'] = np.linspace(0, 180, 9, False)
for i in range(data.shape[-1]):
    df[f'y{i}'] = data[:, i]
    df[f'f{i}'] = fit_data[:, i]
df.to_csv(
    f"data_rofl_{microscope}_{species}_{model}_{psi}_{omega}_{r}_{incl}_{rot}.csv",
    index=False,
    float_format='%.6f')
# %%
